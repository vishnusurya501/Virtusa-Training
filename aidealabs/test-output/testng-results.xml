<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Invalid Login Test]]>
    </line>
  </reporter-output>
  <suite started-at="2024-08-25T22:49:59 IST" name="Default suite" finished-at="2024-08-25T22:50:11 IST" duration-ms="12621">
    <groups>
    </groups>
    <test started-at="2024-08-25T22:49:59 IST" name="Default test" finished-at="2024-08-25T22:50:11 IST" duration-ms="12621">
      <class name="aqmx.testng">
        <test-method is-config="true" signature="setup()[pri:0, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:49:59 IST" name="setup" finished-at="2024-08-25T22:49:59 IST" duration-ms="149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="open()[pri:0, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:49:59 IST" name="open" finished-at="2024-08-25T22:50:01 IST" duration-ms="1969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- open -->
        <test-method signature="validlogin()[pri:1, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:50:01 IST" name="validlogin" finished-at="2024-08-25T22:50:03 IST" duration-ms="2015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validlogin -->
        <test-method is-config="true" signature="close()[pri:0, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:50:03 IST" name="close" finished-at="2024-08-25T22:50:03 IST" duration-ms="108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="open()[pri:0, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:50:03 IST" name="open" finished-at="2024-08-25T22:50:04 IST" duration-ms="1431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- open -->
        <test-method signature="invalidpwd()[pri:2, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:50:04 IST" name="invalidpwd" finished-at="2024-08-25T22:50:06 IST" duration-ms="1541" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Invalid Login Test]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidpwd -->
        <test-method is-config="true" signature="close()[pri:0, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:50:06 IST" name="close" finished-at="2024-08-25T22:50:06 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="open()[pri:0, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:50:06 IST" name="open" finished-at="2024-08-25T22:50:07 IST" duration-ms="1303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- open -->
        <test-method signature="invalidusername()[pri:3, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:50:07 IST" name="invalidusername" finished-at="2024-08-25T22:50:09 IST" duration-ms="1406" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The error message text is not valid. expected [Email or password is incorrect] but found [Too many login attempts. Please try again later.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The error message text is not valid. expected [Email or password is incorrect] but found [Too many login attempts. Please try again later.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at aqmx.testng.invalidusername(testng.java:112)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidusername -->
        <test-method is-config="true" signature="close()[pri:0, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:50:09 IST" name="close" finished-at="2024-08-25T22:50:09 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="open()[pri:0, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:50:09 IST" name="open" finished-at="2024-08-25T22:50:10 IST" duration-ms="1312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- open -->
        <test-method signature="emptyfields()[pri:4, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:50:10 IST" name="emptyfields" finished-at="2024-08-25T22:50:11 IST" duration-ms="771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyfields -->
        <test-method is-config="true" signature="close()[pri:0, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:50:11 IST" name="close" finished-at="2024-08-25T22:50:11 IST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="reportclose()[pri:0, instance:aqmx.testng@7c24b813]" started-at="2024-08-25T22:50:11 IST" name="reportclose" finished-at="2024-08-25T22:50:11 IST" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportclose -->
      </class> <!-- aqmx.testng -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
